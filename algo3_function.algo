FUNCTION function_name(parameters) : FLOAT
VAR
 ps:FLOAT:=0;
 i:INTEGER:=0;
 j:INTEGER:=0;  
BEGIN
    FOR i FROM 0 TO V1.length-1 STEP 1  DO
      FOR j FROM 0 TO V2.length-1 STEP 1  DO
    ps:=ps +V1[i]*V2[j];
      END_FOR
    END_FOR
    RETURN ps;
END

ALGORITHM Dot product
VAR 
 ps:FLOAT;
 n:INTEGER;
 V1: ARRAY_OF FLOAT[10];
 V2: ARRAY_OF FLOAT[10];
 i:INTEGER:=1;
 j:INTEGER:=0;

BEGIN
/*nombre des pairs des vecteurs*/
DO
{
 read(n);
}WHILE(n>0);


FOR i FROM 1 TO n STEP 1  DO
/* entree des vecteurs */
FOR j FROM 0 TO V1.length-1 STEP 1  DO
  read (V1[j]);
  read (V2[j]);
END_FOR

/*tester si les vecteurs sont orthogonaux ou nn */
 ps:=dot_product(V1,V2);
IF (ps=0) THEN
    write("les vecteurs sont orthogonaux ")
ELSE
    write("les vecteurs ne sont pas orthogonaux ")
END_IF
END_FOR

END